-- Total Orders
SELECT DISTINCT COUNT(order_id) AS total_orders
FROM orders;

-- Total Pizzas for each Category of pizza
SELECT category,
	 COUNT(DISTINCT pizza_type_id) AS pizza_count
FROM pizza_type
GROUP BY category
ORDER BY pizza_count DESC;

-- Average Quantity Ordered each Day
SELECT ROUND(AVG(total_orders_per_day),2) AS avg_quantity_ordered
FROM(SELECT
	DATE_TRUNC('day', o.order_date) AS day,
	SUM(od.quantity) AS total_orders_per_day
	FROM orders AS o
	JOIN order_details AS od
	ON o.order_id = od.order_id
	GROUP BY day
);


-- Total Revenue Generated
SELECT ROUND(SUM(od.quantity*p.price),2) AS total_revenue
FROM pizzas AS p
JOIN order_details AS od
ON p.pizza_id = od.pizza_id;

-- Average Value of an Order
SELECT ROUND(AVG(order_value),2) AS avg_orde_value
FROM(SELECT od.order_id,
	        SUM(od.quantity*p.price) AS order_value
	FROM order_details AS od
	JOIN pizzas AS p
	ON p.pizza_id = od.pizza_id
	GROUP BY od.order_id);

-- Top five most ordered (quantity) pizza type
SELECT
	pt.category,
	SUM(o.quantity) AS quantity_sold
FROM pizza_type AS pt 
JOIN pizzas AS p
ON pt.pizza_type_id = p.pizza_type_id
JOIN order_details AS o
ON o.pizza_id = p.pizza_id
GROUP BY pt.category
ORDER BY quantity_sold DESC;

-- Pizza Size Ordered the Most
SELECT p.size AS pizza_size,
	SUM(od.quantity) AS total_quantity
FROM pizzas AS p
JOIN order_details AS od
ON p.pizza_id  = od.pizza_id
GROUP BY p.size
ORDER BY total_quantity DESC;

-- Highest-Priced Pizza
SELECT pt.name, p.price
FROM pizza_type AS pt
JOIN pizzas AS p 
ON pt.pizza_type_id =p.pizza_type_id
ORDER BY p.price DESC
LIMIT 1;

-- Total Orders Placed each Month
SELECT  DATE_TRUNC('month', order_date) AS months,
	   COUNT(order_id) AS total_orders
FROM orders
GROUP BY months
ORDER BY months;

-- Most Ordered Pizza Type
SELECT pt.name AS pizza_name,
	SUM(od.quantity) AS total_orders
FROM order_details AS od
JOIN pizzas AS p
ON od.pizza_id = p.pizza_id
JOIN pizza_type AS pt
ON pt.pizza_type_id = p.pizza_type_id
GROUP BY pt.name
ORDER BY total_orders;

-- Total Revenue Generated by each Pizza Type
SELECT pt.name AS pizza_name,
	SUM(od.quantity*p.price) AS revenue
FROM order_details AS od
JOIN pizzas AS p
ON od.pizza_id = p.pizza_id
JOIN pizza_type AS pt
ON pt.pizza_type_id = p.pizza_type_id
GROUP BY pt.name
ORDER BY revenue DESC;

-- Most Ordered Pizza Type
SELECT pt.category AS pizza_category,
	   SUM(o.quantity) AS quantity_sold
FROM pizzas AS p
JOIN pizza_type AS pt
ON p.pizza_type_id = pt.pizza_type_id
JOIN order_details AS o
ON o.pizza_id = p.pizza_id 
GROUP BY pt.category
ORDER BY quantity_sold DESC;

-- Top 5 Ingredient combinations used in pizzas
SELECT pt.ingredients,
	   COUNT(od.order_id) AS most_used_ingredients
FROM pizza_type AS pt
JOIN pizzas AS p
ON pt.pizza_type_id = p.pizza_type_id
JOIN order_details AS od
ON od.pizza_id = p.pizza_id
GROUP BY pt.ingredients
ORDER BY most_used_ingredients DESC
LIMIT 5;

-- Pizza Category with total orders highest to lowest
SELECT pt.category,
	COUNT(DISTINCT od.order_id) AS total_orders
FROM pizza_type AS pt
JOIN pizzas AS p
ON p.pizza_type_id = pt.pizza_type_id
JOIN order_details AS od
ON p.pizza_id = od.pizza_id
GROUP BY pt.category
ORDER BY total_orders DESC;


-- Determine the distribution of orders by hour of the day
SELECT
      EXTRACT(hour FROM order_time) AS order_hour,
      COUNT(order_id) AS orders
FROM
	orders
GROUP BY
	order_hour
ORDER BY
	order_hour;

-- Category wise distribution of pizzas
SELECT category,
	COUNT(DISTINCT pizza_type_id) AS pizza_count
FROM 
	pizza_type
GROUP BY 
	category
ORDER BY 
	pizza_count DESC;

-- Average number of pizzas ordered per day 
SELECT
       ROUND(AVG(total_orders_per_day),2) AS avg_quantity_ordered
FROM (SELECT
	DATE_TRUNC('day', o.order_date) AS day,
	SUM(od.quantity) AS total_orders_per_day
	FROM orders AS o
    JOIN order_details AS od
    ON o.order_id = od.order_id
	GROUP BY day
);

-- Which category earn highest amount of revenue 
SELECT 
	pt.category AS pizza_category,
	SUM(p.price*od.quantity) AS revenue
FROM order_details As od
JOIN pizzas AS p
ON od.pizza_id = p.pizza_id
JOIN pizza_type AS pt
ON p.pizza_type_id = pt.pizza_type_id

-- Calculate the percentage contribution of each pizza type to total revenue
WITH total_revenue AS(
     SELECT 
	     SUM (od.quantity*p.price) AS revenue
     FROM pizzas AS p
	 JOIN order_details AS od
	 ON p.pizza_id = od.pizza_id
),
    category_wise_revenue AS (
	  SELECT 
	      pt.category,
	      SUM(od.quantity*p.price) AS categorical_revenue 
	  FROM order_details AS od
	  JOIN pizzas AS p
	  ON od.pizza_id = p.pizza_id
	  JOIN pizza_type AS pt
	  ON pt.pizza_type_id = p.pizza_type_id
	  GROUP BY pt.category
)
SELECT 
	cwr.category,
	ROUND((cwr.categorical_revenue/tr.revenue)*100,2) AS percentage_revenue_of_category
FROM total_revenue AS tr
CROSS JOIN category_wise_revenue AS cwr
ORDER BY percentage_revenue_of_category DESC;

-- Analyse the cumulative revenue generated over time.
SELECT order_date,
      SUM(revenue) OVER (ORDER BY order_date) AS running_total_revenue
FROM
	(SELECT o.order_date,
	        SUM(p.price * od.quantity) AS revenue
     FROM order_details AS od
     JOIN pizzas AS p
     ON od.pizza_id = p.pizza_id
     JOIN orders AS o
     ON o.order_id = od.order_id
	 GROUP BY o.order_date); 

-- Analyse the cumulative revenue generated over time.
SELECT order_month,
	   SUM(revenue) OVER(ORDER BY order_month) AS cumulative_sum_revenue
FROM(
	SELECT TO_CHAR(DATE_TRUNC('month', o.order_date), 'YYYY-MM') AS order_month,
	       SUM(od.quantity * p.price) AS revenue
	 FROM order_details AS od
     JOIN pizzas AS p
     ON od.pizza_id = p.pizza_id
     JOIN orders AS o
     ON o.order_id = od.order_id
	 GROUP BY order_month);

-- Determine the Top 3 most ordered pizza type based on revenue for each pizza category.
SELECT pizza_name, pizza_category, revenue
FROM(SELECT pt.category AS pizza_category,
	    pt.name AS pizza_name,
	   	SUM(od.quantity * p.price) AS revenue,
	   	DENSE_RANK() OVER(PARTITION BY pt.category ORDER BY SUM(od.quantity * p.price) DESC) AS rank
     FROM order_details AS od
	 JOIN pizzas AS p
	 ON  od.pizza_id = p.pizza_id 
	 JOIN pizza_type AS pt 
	 ON p.pizza_type_id = pt.pizza_type_id
	 GROUP BY pt.name, pt.category)
WHERE rank <= 3
ORDER BY pizza_category;
